%% filepath: /Users/anandasarangaram/Work/keep_it_package/docs/diagrams/clstore_create_media_sequence.mmd
sequenceDiagram
    participant Client
    participant CLStore
    participant EntityStore
    participant DBAgent
    participant CLEntity
    participant Shortcuts
    participant Database

    Client->>CLStore: createMedia(mediaFile, parentId, label, description, strategy)
    CLStore->>EntityStore: get(EntityQuery for md5 and isCollection)
    EntityStore->>DBAgent: Query for md5 and isCollection
    DBAgent->>Database: Execute Query
    Database-->>DBAgent: mediaInDB (if exists)
    DBAgent-->>EntityStore: mediaInDB
    EntityStore-->>CLStore: mediaInDB

    alt mediaInDB exists
        CLStore->>CLStore: check strategy
        alt strategy == skip
            CLStore-->>Client: Return StoreEntity with mediaInDB
        else strategy != skip
            CLStore->>CLStore: updateMedia with mediaInDB.id
            CLStore-->>Client: Return updated StoreEntity
        end
    else mediaInDB does not exist
        CLStore->>EntityStore: get(EntityQuery for parentId)
        EntityStore->>DBAgent: Query for parentId
        DBAgent->>Database: Execute Query
        Database-->>DBAgent: parent (if exists)
        DBAgent-->>EntityStore: parent
        EntityStore-->>CLStore: parent

        alt parent does not exist
            CLStore->>CLStore: createCollection(tempCollectionName)
            CLStore->>EntityStore: dbSave(tempCollection)
            EntityStore->>DBAgent: Insert tempCollection
            DBAgent->>Database: Execute Insert
            Database-->>DBAgent: tempParent
            DBAgent-->>EntityStore: tempParent
            EntityStore-->>CLStore: tempParent
        end

        alt parent is not a collection
            CLStore-->>Client: Throw Exception (Parent must be a collection)
        end

        CLStore->>CLEntity: Create new CLEntity.media
        CLStore->>EntityStore: dbSave(new CLEntity)
        EntityStore->>DBAgent: Insert new CLEntity
        DBAgent->>Database: Execute Insert
        Database-->>DBAgent: saved CLEntity
        DBAgent-->>EntityStore: saved CLEntity
        EntityStore-->>CLStore: saved CLEntity
        CLStore-->>Client: Return StoreEntity with saved CLEntity
    end